AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  mysterio

  Facade for external APIs

Parameters:
  Stage:
    Type: String
    Description: Deployment environment (e.g., dev, test, or prod)
    AllowedValues:
      - dev
      - test
      - prod

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  # Api:
  #   # API Gateway endpoint type: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-restapi-endpointconfiguration.html
  #   EndpointConfiguration: REGIONAL
  #
  #   # Cross Origin Resources Sharing (CORS): https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-api-corsconfiguration.html
  #   # Cors:
  #   #   AllowMethods: "GET, OPTIONS"
  #   #   AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
  #   #   AllowOrigin: "'*'"
  #
  #   # API Gateway access logging: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-apigateway-stage-accesslogsetting.html
  #   AccessLogSetting:
  #     DestinationArn: !Sub
  #       - arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/apigateway/mysterio-${stageName}:*
  #       - stageName: !Ref Stage
  #     Format: $context.identity.sourceIp $context.identity.caller $context.identity.user [$context.requestTime] "$context.httpMethod $context.resourcePath $context.protocol" $context.status $context.responseLength $context.requestId
  #
  #   # API Gateway authorization: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-controlling-access-to-apis.html
  #   #                            https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-api-apiauth.html
  #   Auth:
  #     DefaultAuthorizer: AWS_IAM
  #     InvokeRole: CALLER_CREDENTIALS # default, can specify other role or NONE

  Function:
    Tags:
      Application: mysterio
      Stage: !Ref Stage
    Environment:
      Variables:
        STAGE: !Ref Stage

Resources:
  BambooHREmployeesFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      FunctionName: !Join
        - ''
        - - mysterio-bamboohr-employees-
          - !Ref Stage
      CodeUri: bamboohr-employees/
      Description: Retrieves BambooHR employees from the BambooHR API with all of the specified parameter fields
      Handler: app.handler
      Layers:
        - !Ref DependenciesLayer
        - !Ref SharedLayer
      Runtime: nodejs18.x
      Timeout: 30
      Policies:
        - Statement:
            - Action:
                - ssm:GetParameter*
              Effect: Allow
              Resource:
                - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/BambooHR/APIKey
        - Statement:
            - Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
              Effect: Allow
              Resource: '*'
  BambooHREmployeesFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    DependsOn:
      - BambooHREmployeesFunction
    Properties:
      LogGroupName: !Sub /aws/lambda/${BambooHREmployeesFunction}
      RetentionInDays: 30
  GenerateGiftCardFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      FunctionName: !Join
        - ''
        - - mysterio-generate-gift-card-
          - !Ref Stage
      CodeUri: generate-gift-card/
      Description: Generates an Amazon Incentives gift card
      Handler: app.handler
      Layers:
        - !Ref DependenciesLayer
        - !Ref SharedLayer
      Runtime: nodejs18.x
      Timeout: 30
      Policies:
        - Statement:
            - Action:
                - ssm:GetParameter*
              Effect: Allow
              Resource: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/Amazon/Incentives/*
        - Statement:
            - Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
              Effect: Allow
              Resource: '*'
  GenerateGiftCardFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    DependsOn:
      - GenerateGiftCardFunction
    Properties:
      LogGroupName: !Sub /aws/lambda/${GenerateGiftCardFunction}
      RetentionInDays: 30
  UpdateBambooHREmployeeFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      FunctionName: !Join
        - ''
        - - mysterio-update-bamboohr-employee-
          - !Ref Stage
      CodeUri: update-bamboohr-employee/
      Description: Updates a BambooHR employee via the BambooHR API for all of the specified keys and values
      Handler: app.handler
      Layers:
        - !Ref DependenciesLayer
        - !Ref SharedLayer
      Runtime: nodejs18.x
      Timeout: 30
      Policies:
        - Statement:
            - Action:
                - ssm:GetParameter*
              Effect: Allow
              Resource:
                - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/BambooHR/APIKey
        - Statement:
            - Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
              Effect: Allow
              Resource: '*'
  UpdateBambooHREmployeeFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    DependsOn:
      - UpdateBambooHREmployeeFunction
    Properties:
      LogGroupName: !Sub /aws/lambda/${UpdateBambooHREmployeeFunction}
      RetentionInDays: 30
  GetTimesheetDataFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      FunctionName: !Join
        - ''
        - - mysterio-get-timesheet-data-
          - !Ref Stage
      CodeUri: get-timesheet-data/
      Description: Retrieves timesheet data from Quickbooks API for given user between a date range
      Handler: app.handler
      Layers:
        - !Ref DependenciesLayer
        - !Ref SharedLayer
      Runtime: nodejs18.x
      Timeout: 30
      Policies:
        - Statement:
            - Action:
                - ssm:GetParameter*
              Effect: Allow
              Resource:
                - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/TSheets/accessToken
        - Statement:
            - Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
              Effect: Allow
              Resource: '*'
  GetTimesheetDataFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    DependsOn:
      - GetTimesheetDataFunction
    Properties:
      LogGroupName: !Sub /aws/lambda/${GetTimesheetDataFunction}
      RetentionInDays: 30
  BasecampTokenFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      FunctionName: !Join
        - ''
        - - mysterio-basecamp-token-
          - !Ref Stage
      CodeUri: basecamp-token/
      Description: Retrieves access token for the Case Consulting Basecamp Info account
      Handler: app.handler
      Layers:
        - !Ref DependenciesLayer
        - !Ref SharedLayer
      Runtime: nodejs18.x
      Timeout: 30
      Policies:
        - Statement:
            - Action:
                - ssm:GetParameter*
              Effect: Allow
              Resource: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/Basecamp/*
        - Statement:
            - Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
              Effect: Allow
              Resource: '*'
  BasecampTokenFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    DependsOn:
      - BasecampTokenFunction
    Properties:
      LogGroupName: !Sub /aws/lambda/${BasecampTokenFunction}
      RetentionInDays: 30
  ADPTokenFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      FunctionName: !Join
        - ''
        - - mysterio-adp-token-
          - !Ref Stage
      CodeUri: adp-token/
      Description: Retrieves access token for the CASE ADP API Central account
      Handler: app.handler
      Layers:
        - !Ref DependenciesLayer
        - !Ref SharedLayer
      Runtime: nodejs18.x
      Timeout: 30
      Policies:
        - Statement:
            - Action:
                - ssm:GetParameter*
              Effect: Allow
              Resource: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/ADP/*
        - Statement:
            - Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
              Effect: Allow
              Resource: '*'
  ADPTokenFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    DependsOn:
      - ADPTokenFunction
    Properties:
      LogGroupName: !Sub /aws/lambda/${ADPTokenFunction}
      RetentionInDays: 30
  ADPEmployeesFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      FunctionName: !Join
        - ''
        - - mysterio-adp-employees-
          - !Ref Stage
      CodeUri: adp-employees/
      Description: Retrieves all ADP employees under the CASE account
      Handler: app.handler
      Layers:
        - !Ref DependenciesLayer
        - !Ref SharedLayer
      Runtime: nodejs18.x
      Timeout: 30
      Policies:
        - Statement:
            - Action:
                - ssm:GetParameter*
              Effect: Allow
              Resource: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/ADP/*
        - Statement:
            - Action:
                - lambda:InvokeFunction
                - lambda:InvokeAsync
              Effect: Allow
              Resource: '*'
        - Statement:
            - Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
              Effect: Allow
              Resource: '*'
  ADPEmployeesFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    DependsOn:
      - ADPEmployeesFunction
    Properties:
      LogGroupName: !Sub /aws/lambda/${ADPEmployeesFunction}
      RetentionInDays: 30
  ADPUpdateEmployeeFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      FunctionName: !Join
        - ''
        - - mysterio-adp-update-employee-
          - !Ref Stage
      CodeUri: adp-update-employee/
      Description: Updates an employee on ADP
      Handler: app.handler
      Layers:
        - !Ref DependenciesLayer
        - !Ref SharedLayer
      Runtime: nodejs18.x
      Timeout: 30
      Policies:
        - Statement:
            - Action:
                - ssm:GetParameter*
              Effect: Allow
              Resource: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/ADP/*
        - Statement:
            - Action:
                - lambda:InvokeFunction
                - lambda:InvokeAsync
              Effect: Allow
              Resource: '*'
        - Statement:
            - Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
              Effect: Allow
              Resource: '*'
  ADPUpdateEmployeeFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    DependsOn:
      - ADPUpdateEmployeeFunction
    Properties:
      LogGroupName: !Sub /aws/lambda/${ADPUpdateEmployeeFunction}
      RetentionInDays: 30
  DependenciesLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: !Join
        - ''
        - - mysterio-dependencies-
          - !Ref Stage
      Description: Packages for lambda functions.
      ContentUri: layers/dependencies
      CompatibleRuntimes:
        - nodejs18.x
      RetentionPolicy: Retain
  SharedLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: !Join
        - ''
        - - mysterio-shared-
          - !Ref Stage
      Description: Shared code for lambda functions.
      ContentUri: layers/shared
      CompatibleRuntimes:
        - nodejs18.x
      RetentionPolicy: Retain

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  BasecampTokenFunction:
    Description: 'Basecamp Token Lambda Function ARN'
    Value: !GetAtt BasecampTokenFunction.Arn
  BasecampTokenFunctionIamRole:
    Description: 'Implicit IAM Role created for Basecamp Token function'
    Value: !GetAtt BasecampTokenFunctionRole.Arn
  ADPTokenFunction:
    Description: 'ADP Token Lambda Function ARN'
    Value: !GetAtt ADPTokenFunction.Arn
